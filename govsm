#!/bin/bash

INSTALL_DIR="/usr/local"

# Detect operating system and architecture
detect_go_arch() {
    local os=$(uname -s)
    local arch=$(uname -m)

    case "$os" in
        Linux*)  os="linux" ;;
        Darwin*) os="darwin" ;;
        *)
            echo "Unsupported OS: $os"
            exit 1
            ;;
    esac

    case "$arch" in
        x86_64|amd64) arch="amd64" ;;
        arm64|aarch64) arch="arm64" ;;
        *)
            echo "Unsupported architecture: $arch"
            exit 1
            ;;
    esac

    echo "${os}-${arch}"
}

GO_ARCH="$(detect_go_arch)"

list_versions() {
    echo "üîç Fetching available versions..."
    curl -s https://go.dev/dl/ | grep -o 'go[0-9]\+\.[0-9]\+\.[0-9]\+' | sort -u
}

install_go() {
    VERSION=$1
    if [[ -z "$VERSION" ]]; then
        echo "‚ö†Ô∏è  Usage: govsm install <version> (e.g. govsm install 1.22.0)"
        exit 1
    fi

    GO_TAR="go${VERSION}.${GO_ARCH}.tar.gz"
    GO_URL="https://go.dev/dl/${GO_TAR}"

    echo "üöÄ Downloading Go ${VERSION}..."
    wget -q ${GO_URL} -O ${GO_TAR}

    echo "üîß Removing previous versions..."
    sudo rm -rf ${INSTALL_DIR}/go

    echo "üì¶ Installing Go ${VERSION}..."
    sudo tar -C ${INSTALL_DIR} -xzf ${GO_TAR}
    rm ${GO_TAR}

    echo "üîß Setting environment variables..."
    export GOROOT=${INSTALL_DIR}/go
    export PATH=$GOROOT/bin:$PATH

    echo "‚úÖ Go ${VERSION} installed successfully!"
    go version
}

if [[ "$1" == "list" ]]; then
    list_versions
elif [[ "$1" == "install" ]]; then
    install_go "$2"
else
    echo "Usage: govsm <command>"
    echo "Available commands:"
    echo "  list           - List versions available for download"
    echo "  install <ver>  - Install a specific Go version"
    echo ""
    echo "Example to install version 1.21.6:"
    echo "  govsm install 1.21.6"
fi
